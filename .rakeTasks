<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeGroup description="" fullCmd="" taksId="active_storage"><RakeTask description="Copy over the migration needed to the application" fullCmd="active_storage:install" taksId="install" /><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="" fullCmd="active_storage:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="app"><RakeTask description="Applies the template supplied by LOCATION=(/path/to/template) or URL" fullCmd="app:template" taksId="template" /><RakeTask description="Update configs and some other initially generated files (or use just update:configs or update:bin)" fullCmd="app:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="app:templates:copy" taksId="copy" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="app:update:bin" taksId="bin" /><RakeTask description="" fullCmd="app:update:configs" taksId="configs" /><RakeTask description="" fullCmd="app:update:upgrade_guide_info" taksId="upgrade_guide_info" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="cache_digests"><RakeTask description="Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:dependencies" taksId="dependencies" /><RakeTask description="Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:nested_dependencies" taksId="nested_dependencies" /></RakeGroup><RakeTask description="Run the Continuous Integration tests for Redmine" fullCmd="ci" taksId="ci" /><RakeGroup description="" fullCmd="" taksId="ci"><RakeTask description="Display info about the build environment" fullCmd="ci:about" taksId="about" /><RakeTask description="Build Redmine" fullCmd="ci:build" taksId="build" /><RakeTask description="Setup Redmine for a new build" fullCmd="ci:setup" taksId="setup" /><RakeTask description="Finish the build" fullCmd="ci:teardown" taksId="teardown" /></RakeGroup><RakeTask description="Creates database.yml for the CI server" fullCmd="config/database.yml" taksId="config/database.yml" /><RakeTask description="Generates a secret token for the application" fullCmd="config/initializers/secret_token.rb" taksId="config/initializers/secret_token.rb" /><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Creates the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:create:all to create all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to creating the development and test databases" fullCmd="db:create" taksId="create" /><RakeTask description="Decrypts SCM and LDAP passwords in the database" fullCmd="db:decrypt" taksId="decrypt" /><RakeTask description="Drops the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:drop:all to drop all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to dropping the development and test databases" fullCmd="db:drop" taksId="drop" /><RakeTask description="Encrypts SCM and LDAP passwords in the database" fullCmd="db:encrypt" taksId="encrypt" /><RakeGroup description="" fullCmd="" taksId="environment"><RakeTask description="Set the environment value for the database" fullCmd="db:environment:set" taksId="set" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Loads fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask description="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeTask description="Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask description="" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="" fullCmd="db:migrate:plugin" taksId="plugin" /><RakeTask description="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="Clears a db/schema_cache.yml file" fullCmd="db:schema:cache:clear" taksId="clear" /><RakeTask description="Creates a db/schema_cache.yml file" fullCmd="db:schema:cache:dump" taksId="dump" /></RakeGroup><RakeTask description="Creates a db/schema.rb file that is portable against any DB supported by Active Record" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Loads a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /><RakeTask description="" fullCmd="db:schema:load_if_ruby" taksId="load_if_ruby" /></RakeGroup><RakeTask description="Loads the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeTask description="Creates the database, loads the schema, and initializes with the seed data (use db:reset to also drop the database first)" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dumps the database structure to db/structure.sql" fullCmd="db:structure:dump" taksId="dump" /><RakeTask description="Recreates the databases from the structure.sql file" fullCmd="db:structure:load" taksId="load" /><RakeTask description="" fullCmd="db:structure:load_if_sql" taksId="load_if_sql" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:_dump" taksId="_dump" /><RakeTask description="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="" fullCmd="db:charset" taksId="charset" /><RakeTask description="" fullCmd="db:check_protected_environments" taksId="check_protected_environments" /><RakeTask description="" fullCmd="db:collation" taksId="collation" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="" fullCmd="db:drop:_unsafe" taksId="_unsafe" /><RakeTask description="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:forward" taksId="forward" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:migrate_plugins" taksId="migrate_plugins" /><RakeTask description="" fullCmd="db:purge" taksId="purge" /><RakeGroup description="" fullCmd="" taksId="purge"><RakeTask description="" fullCmd="db:purge:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:reset" taksId="reset" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="db:test:load" taksId="load" /><RakeTask description="" fullCmd="db:test:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="db:test:load_structure" taksId="load_structure" /><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="deface"><RakeTask description="Removes all precompiled override templates" fullCmd="deface:clean" taksId="clean" /><RakeTask description="Report on failing overrides for a partial/template" fullCmd="deface:failures_by_virtual_path[virtual_path]" taksId="failures_by_virtual_path[virtual_path]" /><RakeTask description="Get the resulting markup for a partial/template" fullCmd="deface:get_result[virtual_path]" taksId="get_result[virtual_path]" /><RakeTask description="Precompiles overrides into template files" fullCmd="deface:precompile" taksId="precompile" /><RakeTask description="Load and apply all overrides, and output results" fullCmd="deface:test_all" taksId="test_all" /><RakeTask description="Applies selectors to given partial/template, and returns match(s) source" fullCmd="deface:test_selector[virtual_path,selector]" taksId="test_selector[virtual_path,selector]" /><RakeTask description="" fullCmd="deface:failures_by_virtual_path" taksId="failures_by_virtual_path" /><RakeTask description="" fullCmd="deface:get_result" taksId="get_result" /><RakeTask description="" fullCmd="deface:test_selector" taksId="test_selector" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="dev"><RakeTask description="Toggle development mode caching on/off" fullCmd="dev:cache" taksId="cache" /></RakeGroup><RakeTask description="Create YAML test fixtures from data in an existing database" fullCmd="extract_fixtures" taksId="extract_fixtures" /><RakeTask description="Generates a secret token for the application" fullCmd="generate_secret_token" taksId="generate_secret_token" /><RakeTask description="Print out all defined initializers in the order they are invoked by Rails" fullCmd="initializers" taksId="initializers" /><RakeTask description="Updates and checks locales against en.yml" fullCmd="locales" taksId="locales" /><RakeGroup description="" fullCmd="" taksId="locales"><RakeTask description="Adds a new top-level translation string to all locale file (only works for childless keys, probably doesn't work on windows, doesn't check for duplicates)" fullCmd="locales:add_key" taksId="add_key" /><RakeTask description="Checks interpolation arguments in locals against en.yml" fullCmd="locales:check_interpolation" taksId="check_interpolation" /><RakeTask description="Check parsing yaml by psych library on Ruby 1.9" fullCmd="locales:check_parsing_by_psych" taksId="check_parsing_by_psych" /><RakeTask description="Duplicates a key" fullCmd="locales:dup" taksId="dup" /><RakeTask description="Removes a translation string from all locale file (only works for top-level childless non-multiline keys, probably doesn't work on windows)" fullCmd="locales:remove_key" taksId="remove_key" /><RakeTask description="Updates language files based on en.yml content (only works for new top level keys)" fullCmd="locales:update" taksId="update" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all/specified *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="redmine"><RakeGroup description="" fullCmd="" taksId="additionals"><RakeTask description="Drop plugin settings" fullCmd="redmine:additionals:drop_settings" taksId="drop_settings" /><RakeTask description="Get settings" fullCmd="redmine:additionals:setting_get" taksId="setting_get" /><RakeTask description="Set settings" fullCmd="redmine:additionals:setting_set" taksId="setting_set" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="attachments"><RakeTask description="Moves attachments stored at the root of the file directory (ie" fullCmd="redmine:attachments:move_to_subdirectories" taksId="move_to_subdirectories" /><RakeTask description="Removes uploaded files left unattached after one day" fullCmd="redmine:attachments:prune" taksId="prune" /><RakeTask description="Updates attachment digests to SHA256" fullCmd="redmine:attachments:update_digests" taksId="update_digests" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="email"><RakeTask description="Read an email from standard input" fullCmd="redmine:email:read" taksId="read" /><RakeTask description="Read emails from an IMAP server" fullCmd="redmine:email:receive_imap" taksId="receive_imap" /><RakeTask description="Read emails from an POP3 server" fullCmd="redmine:email:receive_pop3" taksId="receive_pop3" /><RakeTask description="Send a test email to the user with the provided login name" fullCmd="redmine:email:test[login]" taksId="test[login]" /><RakeTask description="" fullCmd="redmine:email:test" taksId="test" /></RakeGroup><RakeTask description="Fetch changesets from the repositories" fullCmd="redmine:fetch_changesets" taksId="fetch_changesets" /><RakeTask description="Load Redmine default configuration data" fullCmd="redmine:load_default_data" taksId="load_default_data" /><RakeTask description="FOR EXPERIMENTAL USE ONLY, Moves Redmine data from production database to the development database" fullCmd="redmine:migrate_dbms" taksId="migrate_dbms" /><RakeTask description="Mantis migration script" fullCmd="redmine:migrate_from_mantis" taksId="migrate_from_mantis" /><RakeTask description="Trac migration script" fullCmd="redmine:migrate_from_trac" taksId="migrate_from_trac" /><RakeTask description="List all permissions and the actions registered with them" fullCmd="redmine:permissions" taksId="permissions" /><RakeTask description="Migrates and copies plugins assets" fullCmd="redmine:plugins" taksId="plugins" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="Copies plugins assets into the public directory" fullCmd="redmine:plugins:assets" taksId="assets" /><RakeTask description="Migrates installed plugins" fullCmd="redmine:plugins:migrate" taksId="migrate" /><RakeTask description="Runs the plugins tests" fullCmd="redmine:plugins:test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Runs the plugins functional tests" fullCmd="redmine:plugins:test:functionals" taksId="functionals" /><RakeTask description="Runs the plugins integration tests" fullCmd="redmine:plugins:test:integration" taksId="integration" /><RakeTask description="Runs the plugins system tests" fullCmd="redmine:plugins:test:system" taksId="system" /><RakeTask description="Runs the plugins ui tests" fullCmd="redmine:plugins:test:ui" taksId="ui" /><RakeTask description="Runs the plugins unit tests" fullCmd="redmine:plugins:test:units" taksId="units" /></RakeGroup></RakeGroup><RakeTask description="Send reminders about issues due in the next days" fullCmd="redmine:send_reminders" taksId="send_reminders" /><RakeGroup description="" fullCmd="" taksId="tokens"><RakeTask description="Removes expired tokens" fullCmd="redmine:tokens:prune" taksId="prune" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="watchers"><RakeTask description="Removes watchers from what they can no longer view" fullCmd="redmine:watchers:prune" taksId="prune" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="redmine_extensions_engine"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from redmine_extensions_engine to application" fullCmd="redmine_extensions_engine:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeTask description="Restart app by touching tmp/restart.txt" fullCmd="restart" taksId="restart" /><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeTask description="Report code statistics (KLOCs, etc) from the application or engine" fullCmd="stats" taksId="stats" /><RakeTask description="Runs all tests in test folder except system ones" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Measures test coverage" fullCmd="test:coverage" taksId="coverage" /><RakeTask description="Run tests quickly, but also reset db" fullCmd="test:db" taksId="db" /><RakeTask description="Run the routing tests" fullCmd="test:routing" taksId="routing" /><RakeTask description="Run unit and functional scm tests" fullCmd="test:scm" taksId="scm" /><RakeGroup description="" fullCmd="" taksId="scm"><RakeTask description="Run the scm functional tests" fullCmd="test:scm:functionals" taksId="functionals" /><RakeGroup description="" fullCmd="" taksId="setup"><RakeTask description="Creates all test repositories" fullCmd="test:scm:setup:all" taksId="all" /><RakeTask description="Creates a test bazaar repository" fullCmd="test:scm:setup:bazaar" taksId="bazaar" /><RakeTask description="Creates directory for test repositories" fullCmd="test:scm:setup:create_dir" taksId="create_dir" /><RakeTask description="Creates a test cvs repository" fullCmd="test:scm:setup:cvs" taksId="cvs" /><RakeTask description="Creates a test filesystem repository" fullCmd="test:scm:setup:filesystem" taksId="filesystem" /><RakeTask description="Creates a test git repository" fullCmd="test:scm:setup:git" taksId="git" /><RakeTask description="Creates a test mercurial repository" fullCmd="test:scm:setup:mercurial" taksId="mercurial" /><RakeTask description="Creates a test subversion repository" fullCmd="test:scm:setup:subversion" taksId="subversion" /></RakeGroup><RakeTask description="Run the scm unit tests" fullCmd="test:scm:units" taksId="units" /><RakeTask description="Updates installed test repositories" fullCmd="test:scm:update" taksId="update" /></RakeGroup><RakeTask description="Run system tests only" fullCmd="test:system" taksId="system" /><RakeTask description="" fullCmd="test:controllers" taksId="controllers" /><RakeTask description="" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="" fullCmd="test:generators" taksId="generators" /><RakeTask description="" fullCmd="test:helpers" taksId="helpers" /><RakeTask description="" fullCmd="test:integration" taksId="integration" /><RakeTask description="" fullCmd="test:jobs" taksId="jobs" /><RakeTask description="" fullCmd="test:mailers" taksId="mailers" /><RakeTask description="" fullCmd="test:models" taksId="models" /><RakeTask description="" fullCmd="test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="test:rdm_routing" taksId="rdm_routing" /><RakeTask description="" fullCmd="test:run" taksId="run" /><RakeTask description="" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeTask description="List all time zones, list by two-letter country code (`rails time:zones[US]`), or list by UTC offset (`rails time:zones[-8]`)" fullCmd="time:zones[country_or_offset]" taksId="zones[country_or_offset]" /><RakeTask description="" fullCmd="time:zones" taksId="zones" /><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear cache, socket and screenshot files from tmp/ (narrow w/ tmp:cache:clear, tmp:sockets:clear, tmp:screenshots:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="screenshots"><RakeTask description="" fullCmd="tmp:screenshots:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="yarn"><RakeTask description="Install all JavaScript dependencies as specified via Yarn" fullCmd="yarn:install" taksId="install" /></RakeGroup><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeTask description="" fullCmd="generate_session_store" taksId="generate_session_store" /><RakeTask description="" fullCmd="load_default_data" taksId="load_default_data" /><RakeTask description="" fullCmd="migrate_from_mantis" taksId="migrate_from_mantis" /><RakeTask description="" fullCmd="migrate_from_trac" taksId="migrate_from_trac" /><RakeGroup description="" fullCmd="" taksId="railties"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="" fullCmd="railties:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="tmp" taksId="tmp" /><RakeTask description="" fullCmd="tmp/cache" taksId="tmp/cache" /><RakeTask description="" fullCmd="tmp/cache/assets" taksId="tmp/cache/assets" /><RakeTask description="" fullCmd="tmp/pids" taksId="tmp/pids" /><RakeTask description="" fullCmd="tmp/sockets" taksId="tmp/sockets" /></RakeGroup></Settings>
